- C++ code
```cpp
#include <string>
#include <vector>
using namespace std;

string solution(string new_id)
{
    for(int i = 0; i < new_id.length(); i++)
        if (new_id[i] >= 'A' && new_id[i] <= 'Z') 
            new_id[i] = tolower(new_id[i]);

    for(int i = 0; i < new_id.length(); ) 
    {
        if ((new_id[i] >= 'a' && new_id[i] <= 'z') || (new_id[i] >= '0' && new_id[i] <= '9')
              || new_id[i] == '-' || new_id[i] == '_' || new_id[i] == '.')
        {
            i++;
            continue;
        }
        new_id.erase(new_id.begin() + i);
    }

    for(int i = 1; i < new_id.length(); )
    {
        if (new_id[i] == '.' && new_id[i - 1] == '.')
        {
            new_id.erase(new_id.begin() + i);
            continue;
        }
        else i++;
    }
    
    if (new_id.front() == '.') new_id.erase(new_id.begin());
    if (new_id.back() == '.') new_id.erase(new_id.end() - 1);
    if (new_id.length() == 0) new_id = "a";
    if (new_id.length() >= 16) 
        while(new_id.length() != 15) 
            new_id.erase(new_id.begin() + 15);
    if (new_id.back() == '.') new_id.erase(new_id.end() - 1);
    if (new_id.length() <= 2)
        while(new_id.length() != 3)
            new_id += new_id.back();
    return new_id;
}
```

- Python code

```python
def solution(new_id):
    answer = ''
    new_id = new_id.lower()                                                 #1
    for c in new_id:
        if c.isalnum() or c in ['-', '_', '.']: answer += c                 #2
    while '..' in answer: answer = answer.replace('..', '.')                #3
    if answer[0] == '.': answer = answer[1:] if len(answer) > 1 else '.'    #4
    if answer[-1] == '.': answer = answer[:-1]                              #5
    if answer == '': answer = 'a'                                           #6
    if len(answer) > 15: 
        answer = answer[:15]                               #7
        if answer[-1] == '.': answer = answer[:-1]                          #5

    while len(answer) < 3: answer += answer[-1]
    return answer
```
